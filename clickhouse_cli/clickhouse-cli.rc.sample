[defaults]
# Default connection options that will be used if the relevant argument was omitted.

host = 127.0.0.1
port = 8123
db = default
user = default
password =

# It's not secure to store the password here in plain text.

[main]
# Disable multiline mode by default
multiline = False

# Show SQL statements timing
timing = True

# Preferred data format for the interactive mode
format = PrettyCompact

# Preferred data format for the non-interactive mode (file/stdin)
format_stdin = TabSeparated

# Show the reformatted query after its execution
show_formatted_query = True

# Syntax highlighting
highlight = True

# Syntax highlight certain output in the interactive mode:
highlight_output = True

# Syntax highlighting in TrueColor (if supported, see https://gist.github.com/XVilka/8346728)
highlight_truecolor = True

# Show the output via pager (if defined)
pager = False

# A  H O R R I B L E  "user-defined functions" hack
# powered with regular expressions and a little bit of insanity!
udf = {
    # a very bad implementation of detecting the IP ranges from the CIDR notated subnet string
    r'IPv4StringToRangeNum\((.*?)\)': r'''
        [
            toUInt32(IPv4StringToNum(extract(\1, '(\\\\d+.\\\\d+.\\\\d+.\\\\d+)')) + 1),
            toUInt32(IPv4StringToNum(extract(\1, '(\\\\d+.\\\\d+.\\\\d+.\\\\d+)')) + 1 + (-bitShiftLeft(-1, 32 - toUInt32(extract(\1, '/(\\\\d+)$')))) - 3)
        ]
    ''',
    #
    # :) SELECT '192.168.0.0/16' network, IPv4StringToRangeString(network) netrange;
    r'IPv4StringToRangeString\((.*?)\)': r'''
        [
            IPv4NumToString(toUInt32(IPv4StringToNum(extract(\1, '(\\\\d+.\\\\d+.\\\\d+.\\\\d+)')) + 1)),
            IPv4NumToString(toUInt32(IPv4StringToNum(extract(\1, '(\\\\d+.\\\\d+.\\\\d+.\\\\d+)')) + 1 + (-bitShiftLeft(-1, 32 - toUInt32(extract(\1, '/(\\\\d+)$')))) - 3))
        ]
    ''',
    #
    # :) SELECT IPv4StringInNetwork('192.168.1.5', '192.168.1.0/28');
    r'IPv4StringInNetwork\((.*?), (.*?)\)': r'''
        IPv4StringToNum(\1) BETWEEN
            toUInt32(IPv4StringToNum(extract(\2, '(\\\\d+.\\\\d+.\\\\d+.\\\\d+)')) + 1)
            AND
            toUInt32(IPv4StringToNum(extract(\2, '(\\\\d+.\\\\d+.\\\\d+.\\\\d+)')) + 1 + (-bitShiftLeft(-1, 32 - toUInt32(extract(\2, '/(\\\\d+)$')))) - 3)
    ''',
    }

[http]

# Timeout for the connection to the ClickHouse HTTP server (in seconds)
conn_timeout = 10.0

# Amount of retries if the connection was timed out
conn_timeout_retry = 0

# A dynamic delay between retries (see "urllib3 Retry backoff_factor")
conn_timeout_retry_delay = 0.5


[settings]
# You can place the server-side settings here!

# max_memory_usage = 20000000000
